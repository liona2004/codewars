const whoIsPaying = (name) => {
  if (name.length <= 2) {
    return [name];
  } else if (name.length > 2) {
    return [name, name.slice(0,2)];
   
  }
  
}

/* Синтаксис arr.slice([begin[, end]]), где begin - индекс (счёт начинается с нуля), по которому начинать извлечение, a end - индекс (счёт начинается с нуля), по 
которому заканчивать извлечение. Метод slice() извлекает элементы с индексом меньше end.
Вызов slice(1, 4) извлечёт элементы со второго по четвёртый (элементы по индексам 1, 2 и 3).
Вызов slice(2, -1) извлечёт из последовательности элементы начиная с третьего элемента с начала и заканчивая вторым с конца.
*/

/* также можно использовать Метод concat() возвращает новый массив, состоящий из массива, на котором он был вызван, 
соединённого с другими массивами и/или значениями, переданными в качестве аргументов 
const array1 = ['a', 'b', 'c'];
const array2 = ['d', 'e', 'f'];
const array3 = array1.concat(array2);

console.log(array3);
// expected output: Array ["a", "b", "c", "d", "e", "f"]
*/

const whoIsPaying = (name) => {
  if (name.length <= 2) {
    return [name];
  } else if (name.length > 2) {
    return [name].concat(name.slice(0,2));
   
  }
  
}

//ИЛИ 
 whoIsPaying = name => name.length <= 2 ? [name] :  [name, name[0] + name[1]];  // сложить strings
