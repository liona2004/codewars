function mergeArrays(arr1, arr2) {
  var arr12 = arr1.concat(arr2);
  return [...new Set (arr12)].sort((a,b) => a - b); 
}

/* The concat() method is used to merge two or more arrays. 
const numbers = num1.concat(num2, num3);

... - –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –º–∞—Å—Å–∏–≤ spread()
üíï

new Set([iterable]);  –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Set
iterable –ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –≤—Å–µ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –Ω–æ–≤—ã–π Set. –ò–Ω–∞—á–µ (–∏–ª–∏ –ø—Ä–∏ null) –Ω–æ–≤—ã–π Set –±—É–¥–µ—Ç –ø—É—Å—Ç.
Set (–Ω–∞–±–æ—Ä—ã) ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤ ES6 (ES2015)
!!!!!!!!!!!!!!!!!!!–æ–Ω–∏ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –ö–æ–≥–¥–∞ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –Ω–∞–±–æ—Ä, –æ–Ω –ø—Ä–∏–º–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ!!!!!!!!!!!

–º–µ—Ç–æ–¥ add(). –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–∏–±–æ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ª–∏–±–æ –∏—Ç–µ—Ä–∞—Ü–∏—é.
// –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –Ω–∞–±–æ—Ä–∞
const mySet = new Set()
// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞–±–æ—Ä "mySet"
mySet.add('Helo')
mySet.add(314)
mySet.add(false)
mySet.add(null)
mySet.add(undefined)
mySet.add({ name: 'Joe' })
// –í—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π mySet
console.log(mySet)
// –†–µ–∑—É–ª—å—Ç–∞—Ç:
// Set { 'Helo', 314, false, null, undefined, { name: 'Joe' } }
// –ü—Ä–∏–º–µ—Ä no.2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –Ω–∞–±–æ—Ä mySet
mySet.add(['Strike', 13, false, null, [5, 6], { language: 'JS & TS' }])


*/
